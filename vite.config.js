import { defineConfig } from "vite";
import path from "path";
import fs from "fs";
import manifest from "./manifest.json";

const licenseText = fs.existsSync("./LICENSES.txt")
  ? fs.readFileSync("./LICENSES.txt", "utf-8")
  : "Could not find LICENSES.txt. Please run the build command again.";

// A custom Vite plugin to copy multiple files after the build is complete.
const copyFilesPlugin = () => {
  const filesToCopy = [
    "manifest.json",
    "LICENSES.txt", // Generated by the 'license' script
  ];

  return {
    name: "copy-files",
    writeBundle(options) {
      filesToCopy.forEach((file) => {
        const srcPath = path.resolve(__dirname, file);
        const destPath = path.join(options.dir, path.basename(file));

        if (fs.existsSync(srcPath)) {
          fs.copyFileSync(srcPath, destPath);
          console.log(`Copied ${file} to ${destPath}`);
        } else {
          console.warn(
            `Warning: Source file not found, not copied: ${srcPath}`
          );
        }
      });
    },
  };
};

const outDir = process.env.OBSIDIAN_PLUGIN_DIR
  ? path.join(process.env.OBSIDIAN_PLUGIN_DIR, manifest.id)
  : "dist";

export default defineConfig({
  plugins: [copyFilesPlugin()],
  define: {
    __LICENSE_TEXT__: JSON.stringify(licenseText),
  },
  build: {
    lib: {
      entry: path.resolve(__dirname, "src/main.ts"),
      name: "ObsidianMermaidIcons",
      fileName: () => "main.js",
      cssFileName: "styles",
      formats: ["cjs"],
    },
    emptyOutDir: false,
    outDir: outDir,
    rollupOptions: {
      external: ["obsidian"],
    },
  },
});
